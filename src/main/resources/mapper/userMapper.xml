<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.UserMapper">


    <select id="findUser" resultType="com.example.demo.domain.User">
        select  id,name,sex,age,jg,record,phone,idcard,certificate_number,time_one,time_two from user
    </select>

    <insert id="insertUser"  parameterType="com.example.demo.domain.User">
        insert into user (name,sex,age,jg,record,phone,idcard,certificate_number,time_one,time_two)
        VALUES
        <foreach collection="list" item="it" separator="," close=";">
            (
            #{it.name,jdbcType=LONGVARCHAR},
            #{it.sex,jdbcType=LONGVARCHAR},
            #{it.age,jdbcType=INTEGER},
            #{it.jg,jdbcType=LONGVARCHAR},
            #{it.record,jdbcType=LONGVARCHAR},
            #{it.phone,jdbcType=LONGVARCHAR},
            #{it.idcard,jdbcType=LONGVARCHAR},
            #{it.certificateNumber,jdbcType=LONGVARCHAR}
            #{it.timeOne,jdbcType=DATETIME},
            #{it.timeTwo,jdbcType=DATETIME}
            )
        </foreach>
    </insert>

    <select id="getUserInfo" parameterType="java.lang.Integer"  resultType="com.example.demo.domain.User">
    select name,sex,idcard,time_one,certificate_number,time_two
    from user
    where `id` = #{id,jdbcType=INTEGER}
    </select>

    <select id="findById" resultType="com.example.demo.domain.User">
        select  id,name,sex,age,jg,record,phone,idcard,certificate_number,time_one,time_two
        from user
        where id=#{id}

    </select>

    <select id="getUserInfoByIdCard" parameterType="java.lang.String"  resultType="com.example.demo.domain.User">
    select id,name,sex,idcard,certificate_number
    from user
    where `idcard` = #{idcard}
    </select>

    <insert id="addUser" parameterType="com.example.demo.domain.User">
        insert into user (name,sex,age,jg,record,phone,idcard,certificate_number,time_one,time_two)
        VALUES
        (
        #{name,jdbcType=VARCHAR},
        #{sex,jdbcType=VARCHAR},
        #{age,jdbcType=INTEGER},
        #{jg,jdbcType=VARCHAR},
        #{record,jdbcType=VARCHAR},
        #{phone,jdbcType=VARCHAR},
        #{idcard,jdbcType=VARCHAR},
        #{certificateNumber,jdbcType=VARCHAR}
        #{timeOne,jdbcType=DATETIME}
        #{timeTwo,jdbcType=DATETIME}
        )
    </insert>

    <delete id="deleteUser" parameterType="com.example.demo.domain.User">
        delete  from user where id=#{id}
    </delete>

    <update id="updateUser" parameterType="com.example.demo.domain.User">
        update user
        <trim prefix="set" suffixOverrides=",">
            <if test="name != null">name=#{name,jdbcType=VARCHAR},</if>
            <if test="sex != null">sex=#{sex,jdbcType=VARCHAR},</if>
            <if test="age != null">age=#{age,jdbcType=INTEGER},</if>
            <if test="jg != null">jg=#{jg,jdbcType=VARCHAR},</if>
            <if test="record != null">record=#{record,jdbcType=VARCHAR},</if>
            <if test="idcard != null">idcard=#{idcard,jdbcType=VARCHAR},</if>
            <if test="phone != null">phone=#{phone,jdbcType=VARCHAR},</if>
            <if test="certificateNumber != null">certificate_number=#{certificateNumber,jdbcType=VARCHAR}</if>
            <if test="timeOne != null">time_one=#{timeOne,jdbcType=DATETIME},</if>
            <if test="timeTwo != null">time_two=#{timeTwo,jdbcType=DATETIME},</if>
        </trim>
        where
        id=#{id}

    </update>

    <select id="findname" resultType="com.example.demo.domain.User">

        select id,name,sex,age,jg,record,phone,idcard,certificate_number,time_one,time_two

        from user

        where name =#{name}



    </select>



    <!--<insert id="addUser" parameterType="User">
        insert int 'User'('name','sex','age','jg','record','phone','idcard','certificate_number')
        VALUES
        (#{name,jdbcType=VARCHAR},#{sex,jdbcType=VARCHAR},#{age,jdbcType=VARCHAR},#{jg,jdbcType=VARCHAR},#{record,jdbcType=VARCHAR},#{phone,jdbcType=INTEGER},
        #{idcard,jdbcType=INTEGER},#{certificateNumber,jdbcType=VARCHAR});
    </insert>-->

</mapper>